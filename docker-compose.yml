version : '3'

networks:
  mynetwork:

services:
  webserver:
    image: nginx:stable-alpine
    container_name: webserver
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - ./front:/front
      - ./back/app:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # - ./nginx/ssl:/etc/ssl/certs
    depends_on:
      - back
      - front
      - db
    links:
      - db
    networks:
      - mynetwork

  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci','--default-authentication-plugin=mysql_native_password']
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: test
      MYSQL_USER: admin
      MYSQL_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: 123456
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - mynetwork

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - "8888:8080"
  #   links:
  #     - db
  #   depends_on:
  #     - db
  #   networks:
  #     - mynetwork

  front:
    build:
      context: ./front
    working_dir: /front
    container_name: front
    volumes:
      - ./front:/front
    ports:
      - "8000:80"
    networks:
      - mynetwork

  back:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: back
    volumes:
      - ./back/app:/var/www/html
    ports:
      - "9000:9000"
    depends_on:
      - db
    networks:
      - mynetwork

volumes:
  db: